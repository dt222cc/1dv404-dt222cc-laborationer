{"changed":true,"filter":false,"title":"script.js","tooltip":"/Laboration 3/3.Design och implementation/Testfall/js/script.js","value":"\"use strict\";\n\nwindow.onload = function(){\n    \n    // Test to create a new team\n    var lag2 = new Team(\"Lag 2\", \"Julia\", \"3\");\n    \n    // Test to add two teams to League class\n    var league = new League();\n    league.addTeam(\"Lag 1\");\n    league.addTeam(lag2.getName());\n    console.log(league.getTeams());\n};\n\nfunction Team(name, teamLeader, members) {\n    \n    this.getName = function(){return name;};\n    this.setName = function(_name){name = _name || \"Lagets namn saknas!\";};\n\n    this.getTeamLeader = function(){return teamLeader;};\n    this.setTeamLeader = function(_teamLeader){teamLeader = _teamLeader || \"Lagledare är inte definierad!\";};\n    \n    this.getMembers = function(){return members;};\n    this.setMembers = function(_members){members = _members || \"Antal medlemmar är inte definierad!\";};\n\n\n    this.setName(name);\n    this.setTeamLeader(teamLeader);\n    this.setMembers(members);\n}\n\n\n\nfunction League(){\n    this.teams = [];\n}\n\nLeague.prototype.addTeam = function(teamName) {\n/* Add team to this.teams */\n    this.teams.push({\n        name: teamName\n    });\n};\n\nLeague.prototype.getTeams = function(){\n/* Sends back all teams in this.teams */\n    \n    if(this.teams.length === 0){\n        console.log(\"No teams registered.\");\n    }\n    \n    this.teams.forEach(function(entry){\n        console.log(entry.name);\n    }); \n};\n","undoManager":{"mark":-1,"position":0,"stack":[[{"group":"doc","deltas":[{"start":{"row":0,"column":0},"end":{"row":55,"column":0},"action":"insert","lines":["\"use strict\";","","window.onload = function(){","    ","    // Test to create a new team","    var lag2 = new Team(\"Lag 2\", \"Julia\", \"3\");","    ","    // Test to add two teams to League class","    var league = new League();","    league.addTeam(\"Lag 1\");","    league.addTeam(lag2.getName());","    console.log(league.getTeams());","};","","function Team(name, teamLeader, members) {","    ","    this.getName = function(){return name;};","    this.setName = function(_name){name = _name || \"Lagets namn saknas!\";};","","    this.getTeamLeader = function(){return teamLeader;};","    this.setTeamLeader = function(_teamLeader){teamLeader = _teamLeader || \"Lagledare är inte definierad!\";};","    ","    this.getMembers = function(){return members;};","    this.setMembers = function(_members){members = _members || \"Antal medlemmar är inte definierad!\";};","","","    this.setName(name);","    this.setTeamLeader(teamLeader);","    this.setMembers(members);","}","","","","function League(){","    this.teams = [];","}","","League.prototype.addTeam = function(teamName) {","/* Add team to this.teams */","    this.teams.push({","        name: teamName","    });","};","","League.prototype.getTeams = function(){","/* Sends back all teams in this.teams */","    ","    if(this.teams.length === 0){","        console.log(\"No teams registered.\");","    }","    ","    this.teams.forEach(function(entry){","        console.log(entry.name);","    }); ","};",""]}]}],[{"group":"doc","deltas":[{"start":{"row":55,"column":0},"end":{"row":110,"column":0},"action":"insert","lines":["\"use strict\";","","window.onload = function(){","    ","    // Test to create a new team","    var lag2 = new Team(\"Lag 2\", \"Julia\", \"3\");","    ","    // Test to add two teams to League class","    var league = new League();","    league.addTeam(\"Lag 1\");","    league.addTeam(lag2.getName());","    console.log(league.getTeams());","};","","function Team(name, teamLeader, members) {","    ","    this.getName = function(){return name;};","    this.setName = function(_name){name = _name || \"Lagets namn saknas!\";};","","    this.getTeamLeader = function(){return teamLeader;};","    this.setTeamLeader = function(_teamLeader){teamLeader = _teamLeader || \"Lagledare är inte definierad!\";};","    ","    this.getMembers = function(){return members;};","    this.setMembers = function(_members){members = _members || \"Antal medlemmar är inte definierad!\";};","","","    this.setName(name);","    this.setTeamLeader(teamLeader);","    this.setMembers(members);","}","","","","function League(){","    this.teams = [];","}","","League.prototype.addTeam = function(teamName) {","/* Add team to this.teams */","    this.teams.push({","        name: teamName","    });","};","","League.prototype.getTeams = function(){","/* Sends back all teams in this.teams */","    ","    if(this.teams.length === 0){","        console.log(\"No teams registered.\");","    }","    ","    this.teams.forEach(function(entry){","        console.log(entry.name);","    }); ","};",""]}]}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":5,"column":19},"end":{"row":5,"column":23},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1418498514379}